#!/usr/bin/env ruby
# frozen_string_literal: true

require 'date'
require 'shellwords'
require 'optparse'

options = {
  start: Date.today.strftime('%Y-%m-01'),
  end: (Date.today >> 1).strftime('%Y-%m-01')
}

OptionParser.new do |opts|
  opts.on('--start=', 'start') { |v| options[:start] = v }
  opts.on('--end=', 'end') { |v| options[:end] = v }

  opts.on('--last-month', 'last month') do
    options[:start] = (Date.today << 1).strftime('%Y-%m-01')
    options[:end] = Date.today.strftime('%Y-%m-01')
  end

  opts.on('--this-month', 'this month') do
    options[:start] = Date.today.strftime('%Y-%m-01')
    options[:end] = (Date.today >> 1).strftime('%Y-%m-01')
  end

  opts.on('--last-year', 'last year') do
    options[:start] = "#{Date.today.year - 1}-01-01"
    options[:end] = "#{Date.today.year}-01-01"
  end

  opts.on('--this-year', 'this year') do
    options[:start] = "#{Date.today.year}-01-01"
    options[:end] = "#{Date.today.year + 1}-01-01"
  end
end.parse!

cmd = <<~EXEC
  git log --all --tags --oneline --date=iso --source --pretty=format:'%ad %H - %aN - %S - %s (%ar)'
EXEC

puts cmd
output = `#{cmd}`

output
  .lines
  .sort
  .reverse
  .each do |line|
    next if options[:start] && line < options[:start]
    next if options[:end] && line > options[:end]

    puts line
  end
