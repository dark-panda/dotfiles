#!/usr/bin/env ruby
# encoding: UTF-8

require "shellwords"
require "optparse"

def obfuscate(str)
  str.gsub(/@/, " at the ").gsub(/\.(\w+)(>|$)/, ' dot \1s\2')
end

lines = {}
commits = {}

options = {
  :mailmap => true,
  :verbose => true
}

OptionParser.new do |opts|
  opts.on("-v", "--[no-]verbose", "Verbose") { |v| options[:verbose] = v }
  opts.on("-o", "--[no-]obfuscate", "Obfuscate") { |v| options[:obfuscate] = v }
  opts.on("-m", "--[no-]use-mailmap", "Use mailmap") { |v| options[:mailmap] = v }
  opts.on("-c", "--commits", "Sort by commits") { |v| options[:commits] = true }
end.parse!

args = if !ARGV.empty?
  Shellwords.escape(ARGV.join(" "))
end

cmd = %{git log --format="Author: #{options[:mailmap] ? '%aN' : '%an - %ae'}" --numstat #{args}}
author = nil

`#{cmd}`.each_line do |l|
  begin
    case
    when l =~ /^Author: (.*)$/
      author = $1
      lines[author] ||= 0
      commits[author] ||= 0
      commits[author] += 1
    else
      adds, dels, file = l.split(/\t/)

      if file
        lines[author] += adds.to_i + dels.to_i
      end
    end
  rescue ArgumentError
    next
  end
end

to_sort = if options[:commits]
  commits
else
  lines
end

to_sort.sort_by { |a, c| -c }.each do |author, c|
  a = if options[:obfuscate]
    obfuscate(author)
  else
    author
  end

  if options[:verbose]
    puts "#{a}: #{lines[author]} lines of diff, #{commits[author]} commits"
  else
    puts a
  end
end
